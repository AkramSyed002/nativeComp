{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MyDropdown = function MyDropdown(_ref) {\n  var options = _ref.options,\n      selectedItem = _ref.selectedItem,\n      setSelectedItem = _ref.setSelectedItem,\n      activeItemColor = _ref.activeItemColor;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var onSelectedItem = function onSelectedItem(item) {\n    setSelectedItem(item);\n    setToggle(false);\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"MyDropdown\"\n    }), _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        return setToggle(!toggle);\n      },\n      activeOpacity: 0.8,\n      style: [styles.dropdownStyle, {}],\n      children: [_jsx(Text, {\n        children: !!selectedItem ? selectedItem == null ? void 0 : selectedItem.name : 'Choose an Options'\n      }), _jsx(Image, {\n        source: require(\"../assets/down.png\"),\n        style: {\n          height: 20,\n          width: 20,\n          transform: [{\n            rotate: !toggle ? '0deg' : '180deg'\n          }]\n        }\n      })]\n    }), toggle && _jsx(View, {\n      children: options == null ? void 0 : options.map(function (value, index) {\n        return _jsx(View, {\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return onSelectedItem(value);\n            },\n            style: {\n              backgroundColor: (selectedItem == null ? void 0 : selectedItem.name) == (value == null ? void 0 : value.name) ? activeItemColor : 'white',\n              padding: 8\n            },\n            children: _jsx(Text, {\n              children: value.name\n            })\n          })\n        }, index);\n      })\n    })]\n  });\n};\n\nexport default MyDropdown;\nvar styles = StyleSheet.create({\n  dropdownStyle: {\n    backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n    padding: 8,\n    minHeight: 42,\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["D:/modrenTechSol/native/nativeComp/src/component/MyDropdown.js"],"names":["React","useState","MyDropdown","options","selectedItem","setSelectedItem","activeItemColor","toggle","setToggle","onSelectedItem","item","styles","dropdownStyle","name","require","height","width","transform","rotate","map","value","index","backgroundColor","padding","StyleSheet","create","minHeight","justifyContent","flexDirection","alignItems"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAiE;AAAA,MAA9DC,OAA8D,QAA9DA,OAA8D;AAAA,MAArDC,YAAqD,QAArDA,YAAqD;AAAA,MAAvCC,eAAuC,QAAvCA,eAAuC;AAAA,MAAtBC,eAAsB,QAAtBA,eAAsB;;AAEnF,kBAA4BL,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOM,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAChCL,IAAAA,eAAe,CAACK,IAAD,CAAf;AACAF,IAAAA,SAAS,CAAC,KAAD,CAAT;AACA,GAHD;;AAIA,SACC,MAAC,IAAD;AAAA,eACC,KAAC,IAAD;AAAA;AAAA,MADD,EAEC,MAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAMA,SAAS,CAAC,CAACD,MAAF,CAAf;AAAA,OAA3B;AAAqD,MAAA,aAAa,EAAE,GAApE;AAAyE,MAAA,KAAK,EAAE,CAACI,MAAM,CAACC,aAAR,EAAuB,EAAvB,CAAhF;AAAA,iBAA4G,KAAC,IAAD;AAAA,kBAAO,CAAC,CAACR,YAAF,GAAiBA,YAAjB,oBAAiBA,YAAY,CAAES,IAA/B,GAAsC;AAA7C,QAA5G,EACC,KAAC,KAAD;AAAO,QAAA,MAAM,EAAEC,OAAO,sBAAtB;AAA8C,QAAA,KAAK,EAAE;AACpDC,UAAAA,MAAM,EAAE,EAD4C;AACxCC,UAAAA,KAAK,EAAE,EADiC;AAEpDC,UAAAA,SAAS,EAAE,CAAC;AAAEC,YAAAA,MAAM,EAAE,CAACX,MAAD,GAAU,MAAV,GAAmB;AAA7B,WAAD;AAFyC;AAArD,QADD;AAAA,MAFD,EAQEA,MAAM,IACN,KAAC,IAAD;AAAA,gBAEEJ,OAFF,oBAEEA,OAAO,CAAEgB,GAAT,CAAa,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC/B,eAAQ,KAAC,IAAD;AAAA,oBACP,KAAC,gBAAD;AAAkB,YAAA,OAAO,EAAE;AAAA,qBAAMZ,cAAc,CAACW,KAAD,CAApB;AAAA,aAA3B;AACC,YAAA,KAAK,EAAE;AAAEE,cAAAA,eAAe,EAAE,CAAAlB,YAAY,QAAZ,YAAAA,YAAY,CAAES,IAAd,MAAsBO,KAAtB,oBAAsBA,KAAK,CAAEP,IAA7B,IAAoCP,eAApC,GAAsD,OAAzE;AAAkFiB,cAAAA,OAAO,EAAE;AAA3F,aADR;AAAA,sBAGC,KAAC,IAAD;AAAA,wBAAOH,KAAK,CAACP;AAAb;AAHD;AADO,WAAWQ,KAAX,CAAR;AAOA,OARA;AAFF,MATF;AAAA,IADD;AAwBA,CA/BD;;AAiCA,eAAenB,UAAf;AACA,IAAMS,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAChCb,EAAAA,aAAa,EAAE;AACdU,IAAAA,eAAe,sBADD;AAEdC,IAAAA,OAAO,EAAE,CAFK;AAIdG,IAAAA,SAAS,EAAE,EAJG;AAKdC,IAAAA,cAAc,EAAE,eALF;AAMdC,IAAAA,aAAa,EAAE,KAND;AAOdC,IAAAA,UAAU,EAAE;AAPE;AADiB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native'\r\nimport React, { useState } from 'react'\r\n\r\nconst MyDropdown = ({ options, selectedItem, setSelectedItem, activeItemColor }) => {\r\n\r\n\tconst [toggle, setToggle] = useState(false)\r\n\tconst onSelectedItem = (item) => {\r\n\t\tsetSelectedItem(item)\r\n\t\tsetToggle(false)\r\n\t}\r\n\treturn (\r\n\t\t<View>\r\n\t\t\t<Text>MyDropdown</Text>\r\n\t\t\t<TouchableOpacity onPress={() => setToggle(!toggle)} activeOpacity={0.8} style={[styles.dropdownStyle, {}]}><Text>{!!selectedItem ? selectedItem?.name : 'Choose an Options'}</Text>\r\n\t\t\t\t<Image source={require('../assets/down.png')} style={{\r\n\t\t\t\t\theight: 20, width: 20,\r\n\t\t\t\t\ttransform: [{ rotate: !toggle ? '0deg' : '180deg' }]\r\n\t\t\t\t}} />\r\n\t\t\t</TouchableOpacity>\r\n\t\t\t{toggle &&\r\n\t\t\t\t<View>\r\n\r\n\t\t\t\t\t{options?.map((value, index) => {\r\n\t\t\t\t\t\treturn (<View key={index}>\r\n\t\t\t\t\t\t\t<TouchableOpacity onPress={() => onSelectedItem(value)}\r\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: selectedItem?.name == value?.name ? activeItemColor : 'white', padding: 8 }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Text>{value.name}</Text>\r\n\t\t\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t\t\t</View>)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</View>}\r\n\t\t</View>\r\n\t)\r\n}\r\n\r\nexport default MyDropdown\r\nconst styles = StyleSheet.create({\r\n\tdropdownStyle: {\r\n\t\tbackgroundColor: `rgba(0, 0, 0, 0.2)`,\r\n\t\tpadding: 8,\r\n\t\t// borderRadius: 6,\r\n\t\tminHeight: 42,\r\n\t\tjustifyContent: 'space-between',\r\n\t\tflexDirection: 'row',\r\n\t\talignItems: 'center',\r\n\r\n\t}\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}