{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React from \"react\";\nimport colors from \"../styles/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar MyButton = function MyButton(_ref) {\n  var btnText = _ref.btnText,\n      btnPress = _ref.btnPress,\n      btnStyle = _ref.btnStyle,\n      btnTextStyle = _ref.btnTextStyle;\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(TouchableOpacity, {\n      style: [styles.btnStyle, _objectSpread({}, btnStyle)],\n      activeOpacity: 0.8,\n      onPress: btnPress ? btnPress : function () {\n        return alert(\"hi\");\n      },\n      children: _jsx(Text, {\n        style: [styles.btnTextStyle, _objectSpread({}, btnTextStyle)],\n        children: btnText || \"My Button\"\n      })\n    })\n  });\n};\n\nexport default MyButton;\nvar styles = StyleSheet.create({\n  btnStyle: {\n    backgroundColor: \"#000\",\n    height: 42,\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  btnTextStyle: {\n    color: colors.white,\n    fontSize: 16,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["D:/modrenTechSol/native/nativeComp/src/component/MyButton.js"],"names":["React","colors","MyButton","btnText","btnPress","btnStyle","btnTextStyle","styles","container","alert","StyleSheet","create","backgroundColor","height","width","justifyContent","alignItems","color","white","fontSize","fontWeight"],"mappings":";;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAmD;AAAA,MAAhDC,OAAgD,QAAhDA,OAAgD;AAAA,MAAvCC,QAAuC,QAAvCA,QAAuC;AAAA,MAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AAClE,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,cACE,KAAC,gBAAD;AACE,MAAA,KAAK,EAAE,CAACD,MAAM,CAACF,QAAR,oBAAuBA,QAAvB,EADT;AAEE,MAAA,aAAa,EAAE,GAFjB;AAGE,MAAA,OAAO,EAAED,QAAQ,GAAGA,QAAH,GAAc;AAAA,eAAMK,KAAK,CAAC,IAAD,CAAX;AAAA,OAHjC;AAAA,gBAKE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACF,MAAM,CAACD,YAAR,oBAA2BA,YAA3B,EAAb;AAAA,kBACGH,OAAO,IAAI;AADd;AALF;AADF,IADF;AAaD,CAdD;;AAgBA,eAAeD,QAAf;AAEA,IAAMK,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,QAAQ,EAAE;AACRO,IAAAA,eAAe,EAAE,MADT;AAERC,IAAAA,MAAM,EAAE,EAFA;AAGRC,IAAAA,KAAK,EAAE,MAHC;AAKRC,IAAAA,cAAc,EAAE,QALR;AAMRC,IAAAA,UAAU,EAAE;AANJ,GADqB;AAS/BV,EAAAA,YAAY,EAAE;AACZW,IAAAA,KAAK,EAAEhB,MAAM,CAACiB,KADF;AAEZC,IAAAA,QAAQ,EAAE,EAFE;AAGZC,IAAAA,UAAU,EAAE;AAHA;AATiB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\r\nimport React from \"react\";\r\nimport colors from \"../styles/colors\";\r\n\r\nconst MyButton = ({ btnText, btnPress, btnStyle, btnTextStyle }) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity\r\n        style={[styles.btnStyle, { ...btnStyle }]}\r\n        activeOpacity={0.8}\r\n        onPress={btnPress ? btnPress : () => alert(\"hi\")}\r\n      >\r\n        <Text style={[styles.btnTextStyle, { ...btnTextStyle }]}>\r\n          {btnText || \"My Button\"}\r\n        </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default MyButton;\r\n\r\nconst styles = StyleSheet.create({\r\n  btnStyle: {\r\n    backgroundColor: \"#000\",\r\n    height: 42,\r\n    width: \"100%\",\r\n    // borderRadius: 5,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  btnTextStyle: {\r\n    color: colors.white,\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}